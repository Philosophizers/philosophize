{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/CommentsPage/CommentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTopicOfTheDay, createComment, editComment, removeComment, fetchCommentsForTopic } from \"../../store/topics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const topicOfTheDay = useSelector(state => state.topics.topicOfTheDay);\n  const comments = useSelector(state => Object.values(state.topics.comments));\n  const [content, setContent] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editedContent, setEditedContent] = useState(\"\");\n  const userOwns = true;\n  useEffect(() => {\n    dispatch(fetchTopicOfTheDay());\n  }, [dispatch]);\n  useEffect(() => {\n    if (topicOfTheDay) {\n      dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n    }\n  }, [dispatch, topicOfTheDay]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newErrors = [];\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    const handleEdit = comment => {\n      setEditCommentId(comment.id);\n      setEditedContent(comment.content);\n    };\n    const handleUpdate = async commentId => {\n      if (editedContent.trim() === \"\") {\n        // Handle empty content case, e.g., show an error message\n        return;\n      }\n      try {\n        await dispatch(editComment(commentId, {\n          content: editedContent\n        }));\n        setEditCommentId(null); // Reset edit state\n        dispatch(fetchCommentsForTopic(topicOfTheDay.id)); // Refresh comments\n      } catch (error) {\n        console.error(\"Error updating comment:\", error);\n      }\n    };\n    const handleDelete = async commentId => {\n      try {\n        await dispatch(removeComment(commentId));\n        dispatch(fetchCommentsForTopic(topicOfTheDay.id)); // Refresh comments\n      } catch (error) {\n        console.error(\"Error deleting comment:\", error);\n      }\n    };\n    const commentData = {\n      content\n    };\n    try {\n      const res = await dispatch(createComment(topicOfTheDay.id, commentData));\n      console.log(\"res\", res);\n      dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n    } catch (error) {\n      console.error(\"Error creating topic:\", error);\n    }\n  };\n\n  //   return (\n  //     <div>\n  //       <h1>Comments</h1>\n  //       {topicOfTheDay ? (\n  //         <div>\n  //           <div>\n  //             {comments.map((comment) => (\n  //               <div key={comment.id}>\n  //                 {editCommentId === comment.id ? (\n  //                   <input\n  //                     type=\"text\"\n  //                     value={editedContent}\n  //                     onChange={(e) => setEditedContent(e.target.value)}\n  //                   />\n  //                 ) : (\n  //                   <p>{comment.content}</p>\n  //                 )}\n  //                 {currentUserId === comment.user_id && (\n  //                   <>\n  //                     {editCommentId === comment.id ? (\n  //                       <button onClick={() => handleUpdate(comment.id)}>Save</button>\n  //                     ) : (\n  //                       <button onClick={() => handleEdit(comment)}>Edit</button>\n  //                     )}\n  //                     <button onClick={() => handleDelete(comment.id)}>Delete</button>\n  //                   </>\n  //                 )}\n  //               </div>\n  //             ))}\n  //           </div>\n  //           <form onSubmit={handleSubmit}>\n  //             <div>\n  //               <label>New Comment</label>\n  //               <input\n  //                 type=\"text\"\n  //                 value={content}\n  //                 onChange={(e) => setContent(e.target.value)}\n  //               />\n  //               {errors.content && <p>{errors.content}</p>}\n  //             </div>\n  //             <button type=\"submit\">Create Comment</button>\n  //           </form>\n  //         </div>\n  //       ) : (\n  //         <p>Loading topic...</p>\n  //       )}\n  //     </div>\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), topicOfTheDay ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdate(comment.id),\n            disabled: !userOwns,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(topic.id),\n            disabled: !userOwns,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading topic...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsPage, \"D6PB2z/8VE+3K121Hc1VySC1W44=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CommentsPage;\nexport default CommentsPage;\nvar _c;\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchTopicOfTheDay","createComment","editComment","removeComment","fetchCommentsForTopic","CommentsPage","dispatch","topicOfTheDay","state","topics","comments","Object","values","content","setContent","errors","setErrors","editCommentId","setEditCommentId","editedContent","setEditedContent","userOwns","id","handleSubmit","e","preventDefault","newErrors","length","handleEdit","comment","handleUpdate","commentId","trim","error","console","handleDelete","commentData","res","log","map","topic","target","value"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/CommentsPage/CommentsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchTopicOfTheDay,\n  createComment,\n  editComment,\n  removeComment,\n  fetchCommentsForTopic,\n} from \"../../store/topics\";\nconst CommentsPage = () => {\n  const dispatch = useDispatch();\n  const topicOfTheDay = useSelector((state) => state.topics.topicOfTheDay);\n  const comments = useSelector((state) => Object.values(state.topics.comments));\n  const [content, setContent] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editedContent, setEditedContent] = useState(\"\");\n\n  const userOwns = true;\n\n  useEffect(() => {\n    dispatch(fetchTopicOfTheDay());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (topicOfTheDay) {\n      dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n    }\n  }, [dispatch, topicOfTheDay]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let newErrors = [];\n\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const handleEdit = (comment) => {\n      setEditCommentId(comment.id);\n      setEditedContent(comment.content);\n    };\n\n    const handleUpdate = async (commentId) => {\n      if (editedContent.trim() === \"\") {\n        // Handle empty content case, e.g., show an error message\n        return;\n      }\n      try {\n        await dispatch(editComment(commentId, { content: editedContent }));\n        setEditCommentId(null); // Reset edit state\n        dispatch(fetchCommentsForTopic(topicOfTheDay.id)); // Refresh comments\n      } catch (error) {\n        console.error(\"Error updating comment:\", error);\n      }\n    };\n\n    const handleDelete = async (commentId) => {\n      try {\n        await dispatch(removeComment(commentId));\n        dispatch(fetchCommentsForTopic(topicOfTheDay.id)); // Refresh comments\n      } catch (error) {\n        console.error(\"Error deleting comment:\", error);\n      }\n    };\n\n    const commentData = { content };\n    try {\n      const res = await dispatch(createComment(topicOfTheDay.id, commentData));\n      console.log(\"res\", res);\n\n      dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n    } catch (error) {\n      console.error(\"Error creating topic:\", error);\n    }\n  };\n\n  //   return (\n  //     <div>\n  //       <h1>Comments</h1>\n  //       {topicOfTheDay ? (\n  //         <div>\n  //           <div>\n  //             {comments.map((comment) => (\n  //               <div key={comment.id}>\n  //                 {editCommentId === comment.id ? (\n  //                   <input\n  //                     type=\"text\"\n  //                     value={editedContent}\n  //                     onChange={(e) => setEditedContent(e.target.value)}\n  //                   />\n  //                 ) : (\n  //                   <p>{comment.content}</p>\n  //                 )}\n  //                 {currentUserId === comment.user_id && (\n  //                   <>\n  //                     {editCommentId === comment.id ? (\n  //                       <button onClick={() => handleUpdate(comment.id)}>Save</button>\n  //                     ) : (\n  //                       <button onClick={() => handleEdit(comment)}>Edit</button>\n  //                     )}\n  //                     <button onClick={() => handleDelete(comment.id)}>Delete</button>\n  //                   </>\n  //                 )}\n  //               </div>\n  //             ))}\n  //           </div>\n  //           <form onSubmit={handleSubmit}>\n  //             <div>\n  //               <label>New Comment</label>\n  //               <input\n  //                 type=\"text\"\n  //                 value={content}\n  //                 onChange={(e) => setContent(e.target.value)}\n  //               />\n  //               {errors.content && <p>{errors.content}</p>}\n  //             </div>\n  //             <button type=\"submit\">Create Comment</button>\n  //           </form>\n  //         </div>\n  //       ) : (\n  //         <p>Loading topic...</p>\n  //       )}\n  //     </div>\n  //   );\n  // };\n\n  return (\n    <div>\n      <h1>Comments</h1>\n      {topicOfTheDay ? (\n        <div>\n          <div>\n            {comments.map((comment) => (\n              <div>\n                <p key={comment.id}>{comment.content}</p>\n\n                <button onClick={() => handleUpdate(comment.id)} disabled={!userOwns}>\n                  Edit\n                </button>\n                <button onClick={() => handleDelete(topic.id)} disabled={!userOwns}>\n                  Delete\n                </button>\n              </div>\n            ))}\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div>\n              <label>New Comment</label>\n              <input\n                type=\"text\"\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n              {errors.content && <p>{errors.content}</p>}\n            </div>\n            <button type=\"submit\">Create Comment</button>\n          </form>\n        </div>\n      ) : (\n        <p>Loading topic...</p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}