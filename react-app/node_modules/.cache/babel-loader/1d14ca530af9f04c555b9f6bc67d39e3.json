{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicForm = _ref => {\n  _s();\n  let {\n    existingTopic,\n    onSubmit,\n    onCancel\n  } = _ref;\n  const [title, setTitle] = useState(existingTopic ? existingTopic.title : '');\n  const [description, setDescription] = useState(existingTopic ? existingTopic.description : '');\n  const [errors, setErrors] = useState([]);\n  const [titleError, setTitleError] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n  useEffect(() => {\n    if (existingTopic) {\n      setTitle(existingTopic.title);\n      setDescription(existingTopic.description);\n    }\n  }, [existingTopic]);\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     let newErrors = [];\n\n  //     if (newErrors.length > 0) {\n  //         setErrors(newErrors);\n  //         return;\n  //     }\n\n  //     const topicData = { title, description };\n  //     onSubmit(topicData); // Call the passed onSubmit function\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let hasErrors = false;\n\n    // Title validation\n    if (title.length < 10 || title.length > 250) {\n      setTitleError(\"Title must be between 10 and 250 characters\");\n      hasErrors = true;\n    } else {\n      setTitleError(\"\");\n    }\n\n    // Description validation\n    if (description.length < 50 || description.length > 500) {\n      setDescriptionError(\"Description must be between 50 and 500 characters\");\n      hasErrors = true;\n    } else {\n      setDescriptionError(\"\");\n    }\n    if (hasErrors) return;\n    const topicData = {\n      title,\n      description\n    };\n    onSubmit(topicData);\n  };\n  return (\n    /*#__PURE__*/\n    // <form onSubmit={handleSubmit}>\n    //     <div>\n    //         <label>Title</label>\n    //         <input\n    //             type=\"text\"\n    //             value={title}\n    //             onChange={(e) => setTitle(e.target.value)}\n    //         />\n    //         {errors.title && <p>{errors.title}</p>}\n    //     </div>\n    //     <div>\n    //         <label>Description</label>\n    //         <textarea\n    //             value={description}\n    //             onChange={(e) => setDescription(e.target.value)}\n    //         />\n    //         {errors.description && <p>{errors.description}</p>}\n    //     </div>\n    //     <button type=\"submit\">{existingTopic ? 'Update Topic' : 'Create Topic'}</button>\n    //     {existingTopic && <button type=\"button\" onClick={onCancel}>Cancel</button>}\n    // </form>\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }, this), titleError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: titleError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this), descriptionError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: descriptionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: existingTopic ? 'Update Topic' : 'Create Topic'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 3\n      }, this), existingTopic && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(TopicForm, \"VuWbApBM29+5rqHxa47LeJCddQU=\");\n_c = TopicForm;\nexport default TopicForm;\nvar _c;\n$RefreshReg$(_c, \"TopicForm\");","map":{"version":3,"names":["React","useState","useEffect","TopicForm","existingTopic","onSubmit","onCancel","title","setTitle","description","setDescription","errors","setErrors","titleError","setTitleError","descriptionError","setDescriptionError","handleSubmit","e","preventDefault","hasErrors","length","topicData","target","value"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TopicForm = ({ existingTopic, onSubmit, onCancel }) => {\n    const [title, setTitle] = useState(existingTopic ? existingTopic.title : '');\n    const [description, setDescription] = useState(existingTopic ? existingTopic.description : '');\n    const [errors, setErrors] = useState([]);\n\n    const [titleError, setTitleError] = useState(\"\");\n    const [descriptionError, setDescriptionError] = useState(\"\");\n\n\n    useEffect(() => {\n        if (existingTopic) {\n            setTitle(existingTopic.title);\n            setDescription(existingTopic.description);\n        }\n    }, [existingTopic]);\n\n    // const handleSubmit = async (e) => {\n    //     e.preventDefault();\n    //     let newErrors = [];\n\n\n    //     if (newErrors.length > 0) {\n    //         setErrors(newErrors);\n    //         return;\n    //     }\n\n    //     const topicData = { title, description };\n    //     onSubmit(topicData); // Call the passed onSubmit function\n    // };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let hasErrors = false;\n      \n        // Title validation\n        if (title.length < 10 || title.length > 250) {\n          setTitleError(\"Title must be between 10 and 250 characters\");\n          hasErrors = true;\n        } else {\n          setTitleError(\"\");\n        }\n      \n        // Description validation\n        if (description.length < 50 || description.length > 500) {\n          setDescriptionError(\"Description must be between 50 and 500 characters\");\n          hasErrors = true;\n        } else {\n          setDescriptionError(\"\");\n        }\n      \n        if (hasErrors) return;\n      \n        const topicData = { title, description };\n        onSubmit(topicData);\n      };\n      \n\n    return (\n        // <form onSubmit={handleSubmit}>\n        //     <div>\n        //         <label>Title</label>\n        //         <input\n        //             type=\"text\"\n        //             value={title}\n        //             onChange={(e) => setTitle(e.target.value)}\n        //         />\n        //         {errors.title && <p>{errors.title}</p>}\n        //     </div>\n        //     <div>\n        //         <label>Description</label>\n        //         <textarea\n        //             value={description}\n        //             onChange={(e) => setDescription(e.target.value)}\n        //         />\n        //         {errors.description && <p>{errors.description}</p>}\n        //     </div>\n        //     <button type=\"submit\">{existingTopic ? 'Update Topic' : 'Create Topic'}</button>\n        //     {existingTopic && <button type=\"button\" onClick={onCancel}>Cancel</button>}\n        // </form>\n        <form onSubmit={handleSubmit}>\n  <div>\n    <label>Title</label>\n    <input\n      type=\"text\"\n      value={title}\n      onChange={(e) => setTitle(e.target.value)}\n    />\n    {titleError && <p className=\"error\">{titleError}</p>}\n  </div>\n  <div>\n    <label>Description</label>\n    <textarea\n      value={description}\n      onChange={(e) => setDescription(e.target.value)}\n    />\n    {descriptionError && <p className=\"error\">{descriptionError}</p>}\n  </div>\n  <button type=\"submit\">{existingTopic ? 'Update Topic' : 'Create Topic'}</button>\n  {existingTopic && <button type=\"button\" onClick={onCancel}>Cancel</button>}\n</form>\n\n    );\n};\n\nexport default TopicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}