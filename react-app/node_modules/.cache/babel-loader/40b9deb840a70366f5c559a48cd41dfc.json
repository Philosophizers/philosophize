{"ast":null,"code":"// src/store/topics.js\n\nconst GET_TOPICS = 'topics/GET_TOPICS';\nconst CREATE_TOPIC = 'topics/CREATE_TOPIC';\nconst REMOVE_TOPIC = 'topics/REMOVE_TOPIC';\nconst UPDATE_TOPIC = 'topics/UPDATE_TOPIC';\nconst SET_TOPIC_OF_THE_DAY = 'topics/SET_TOPIC_OF_THE_DAY';\nconst GET_COMMENTS = 'topics/GET_COMMENTS';\nconst ADD_COMMENT = 'topics/ADD_COMMENT';\n\n// Action Creators\nconst getTopics = topics => ({\n  type: GET_TOPICS,\n  topics\n});\nexport const addTopic = topic => ({\n  type: CREATE_TOPIC,\n  topic\n});\n\n// Thunk Action Creators\nexport const fetchTopics = () => async dispatch => {\n  const response = await fetch('/api/topics');\n  if (response.ok) {\n    const topics = await response.json();\n    dispatch(getTopics(topics));\n  }\n};\nexport const updateTopic = topic => ({\n  type: UPDATE_TOPIC,\n  topic\n});\nexport const editTopic = (topicId, topicData) => async dispatch => {\n  const response = await fetch(`/api/topics/${topicId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(topicData),\n    credentials: 'include'\n  });\n  if (response.ok) {\n    const updatedTopic = await response.json();\n    dispatch(updateTopic(updatedTopic));\n    return updatedTopic;\n  } else {\n    const errors = await response.json();\n    return errors;\n  }\n};\nexport const removeTopic = topicId => ({\n  type: REMOVE_TOPIC,\n  topicId\n});\nexport const createTopic = topicData => async dispatch => {\n  const response = await fetch('/api/topics/banana', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(topicData)\n    // body: formInfo\n  });\n\n  if (response.ok) {\n    const newTopic = await response.json();\n    dispatch(addTopic(newTopic));\n    return newTopic;\n  } else {\n    const errors = await response.json();\n    return errors;\n  }\n};\n\n// Reducer\nconst initialState = {};\n\n// export default function topicsReducer(state = initialState, action) {\n//   switch (action.type) {\n//       case GET_TOPICS:\n//           const topicsNormalized = {};\n//           action.topics.forEach(topic => {\n//               topicsNormalized[topic.id] = topic;\n//           });\n//           return { ...state, ...topicsNormalized };\n//       case CREATE_TOPIC:\n//           return { ...state, [action.topic.id]: action.topic };\n//       default:\n//           return state;\n//   }\n// }\n\nexport default function topicsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_TOPICS:\n      return {\n        ...state,\n        ...Object.fromEntries(action.topics.map(topic => [topic.id, topic]))\n      };\n    case CREATE_TOPIC:\n      return {\n        ...state,\n        [action.topic.id]: action.topic\n      };\n    case UPDATE_TOPIC:\n      return {\n        ...state,\n        [action.topic.id]: action.topic\n      };\n    case REMOVE_TOPIC:\n      const newState = {\n        ...state\n      };\n      delete newState[action.topicId];\n      return newState;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_TOPICS","CREATE_TOPIC","REMOVE_TOPIC","UPDATE_TOPIC","SET_TOPIC_OF_THE_DAY","GET_COMMENTS","ADD_COMMENT","getTopics","topics","type","addTopic","topic","fetchTopics","dispatch","response","fetch","ok","json","updateTopic","editTopic","topicId","topicData","method","headers","body","JSON","stringify","credentials","updatedTopic","errors","removeTopic","createTopic","newTopic","initialState","topicsReducer","state","action","Object","fromEntries","map","id","newState"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/store/topics.js"],"sourcesContent":["// src/store/topics.js\n\n\nconst GET_TOPICS = 'topics/GET_TOPICS';\nconst CREATE_TOPIC = 'topics/CREATE_TOPIC';\nconst REMOVE_TOPIC = 'topics/REMOVE_TOPIC';\nconst UPDATE_TOPIC = 'topics/UPDATE_TOPIC';\nconst SET_TOPIC_OF_THE_DAY = 'topics/SET_TOPIC_OF_THE_DAY';\nconst GET_COMMENTS = 'topics/GET_COMMENTS';\nconst ADD_COMMENT = 'topics/ADD_COMMENT';\n\n\n// Action Creators\nconst getTopics = (topics) => ({\n    type: GET_TOPICS,\n    topics\n});\n\nexport const addTopic = (topic) => ({\n    type: CREATE_TOPIC,\n    topic\n});\n\n// Thunk Action Creators\nexport const fetchTopics = () => async (dispatch) => {\n  const response = await fetch('/api/topics');\n  if (response.ok) {\n    const topics = await response.json();\n    dispatch(getTopics(topics));\n  }\n};\n\nexport const updateTopic = (topic) => ({\n  type: UPDATE_TOPIC,\n  topic\n});\n\nexport const editTopic = (topicId, topicData) => async (dispatch) => {\n  const response = await fetch(`/api/topics/${topicId}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(topicData),\n      credentials: 'include',\n  });\n\n  if (response.ok) {\n      const updatedTopic = await response.json();\n      dispatch(updateTopic(updatedTopic));\n      return updatedTopic;\n  } else {\n      const errors = await response.json();\n      return errors;\n  }\n};\n\n\n\nexport const removeTopic = (topicId) => ({\n  type: REMOVE_TOPIC,\n  topicId\n});\n\n\nexport const createTopic = (topicData) => async (dispatch) => {\n    const response = await fetch('/api/topics/banana', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(topicData)\n        // body: formInfo\n    });\n\n    if (response.ok) {\n        const newTopic = await response.json();\n        dispatch(addTopic(newTopic));\n        return newTopic;\n    } else {\n        const errors = await response.json();\n        return errors;\n    }\n};\n\n// Reducer\nconst initialState = {};\n\n// export default function topicsReducer(state = initialState, action) {\n//   switch (action.type) {\n//       case GET_TOPICS:\n//           const topicsNormalized = {};\n//           action.topics.forEach(topic => {\n//               topicsNormalized[topic.id] = topic;\n//           });\n//           return { ...state, ...topicsNormalized };\n//       case CREATE_TOPIC:\n//           return { ...state, [action.topic.id]: action.topic };\n//       default:\n//           return state;\n//   }\n// }\n\n\nexport default function topicsReducer(state = initialState, action) {\n  switch (action.type) {\n      case GET_TOPICS:\n          return { ...state, ...Object.fromEntries(action.topics.map(topic => [topic.id, topic])) };\n      case CREATE_TOPIC:\n          return { ...state, [action.topic.id]: action.topic };\n      case UPDATE_TOPIC:\n            return {\n                ...state,\n                [action.topic.id]: action.topic\n            };\n      case REMOVE_TOPIC:\n          const newState = { ...state };\n          delete newState[action.topicId];\n          return newState;\n      default:\n          return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}