{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Topic from \"./Topic\";\nimport TopicForm from \"./TopicForm\";\nimport { fetchTopics, editTopic, createTopic, removeTopic, checkUserVote } from \"../../store/topics\";\nimport { castVote, removeVote } from \"../../store/topics\";\nimport Modal from \"./TopicModal\";\nimport ConfirmationModal from \"./TopicDeleteConfirm\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./topic.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TopicList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const topics = useSelector(state => Object.values(state.topics));\n  // let topics = useSelector((state) => state.topics);\n  // topics = Object.values(topics);\n  const user = useSelector(state => state.session.user);\n  const [showForm, setShowForm] = useState(false);\n  const [editingTopic, setEditingTopic] = useState(null); // maybe change out of null\n\n  const topicsObject = useSelector(state => state.topics);\n  const topicsArray = topicsObject && Object.values(topicsObject);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMode, setModalMode] = useState(\"create\");\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [topicToDelete, setTopicToDelete] = useState(null);\n  const sortedTopics = topicsArray.sort((a, b) => new Date(b === null || b === void 0 ? void 0 : b.created_at) - new Date(a === null || a === void 0 ? void 0 : a.created_at));\n  useEffect(() => {\n    dispatch(checkUserVote());\n  }, []);\n  useEffect(() => {\n    dispatch(fetchTopics()).catch(console.error);\n  }, [dispatch]);\n  const handleLoginRedirect = () => {\n    history.push(\"/login\"); // Redirect to login page\n  };\n\n  const handleCreateTopic = async topicData => {\n    try {\n      const res = await dispatch(createTopic(topicData));\n      if (!res.errors) {\n        closeModal(); // Close the modal after successful topic creation\n        dispatch(fetchTopics());\n      } else {\n        console.error(\"Failed to create topic:\", res.errors);\n      }\n    } catch (error) {\n      console.error(\"Error creating topic:\", error);\n    }\n  };\n  const handleCreateButtonClick = () => {\n    if (!user) {\n      alert(\"You must be logged in to propose a topic\");\n      return;\n    }\n    setShowForm(true);\n    setEditingTopic(null);\n  };\n\n  //need to push newest topic to top of list\n\n  // const handleEditTopic = async (topicData) => {\n  //   try {\n  //     const res = await dispatch(editTopic(editingTopic.id, topicData));\n  //     if (!res.errors) {\n  //       setShowForm(false);\n  //       setEditingTopic(null);\n  //       dispatch(fetchTopics());\n  //     } else {\n  //       console.error(\"Failed to update topic:\", res.errors);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error updating topic:\", error);\n  //   }\n  // };\n\n  const handleEditTopic = async (topicId, topicData) => {\n    try {\n      const res = await dispatch(editTopic(topicId, topicData));\n      if (!res.errors) {\n        closeModal(); // Close the modal after successful topic edit\n        dispatch(fetchTopics());\n      } else {\n        console.error(\"Failed to update topic:\", res.errors);\n      }\n    } catch (error) {\n      console.error(\"Error updating topic:\", error);\n      console.log(\"Received response:\", error.response);\n    }\n  };\n\n  // you can do this without having to dispathc fetchTopics again\n\n  // const handleDeleteTopic = async (topicId) => {\n  //     try {\n  //         const response = await fetch(`/api/topics/${topicId}`, { method: 'DELETE' });\n  //         if (!response.ok) throw new Error('Network response was not ok');\n  //         dispatch(removeTopic(topicId));\n  //     } catch (error) {\n  //         console.error('Error deleting topic:', error);\n  //     }\n  // };\n\n  const handleDeleteClick = topic => {\n    // Save the topic to delete and show confirmation modal\n    setTopicToDelete(topic);\n    setShowDeleteConfirmation(true);\n  };\n  const closeDeleteConfirmation = () => {\n    // Close the confirmation modal and reset the topic to delete\n    setShowDeleteConfirmation(false);\n    setTopicToDelete(null);\n  };\n  const confirmDelete = async () => {\n    if (topicToDelete) {\n      await handleDeleteTopic(topicToDelete.id);\n    }\n    closeDeleteConfirmation();\n  };\n  const handleDeleteTopic = async topicId => {\n    try {\n      const response = await fetch(`/api/topics/${topicId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      dispatch(removeTopic(topicId));\n      // Wait for state update before trying to re-render the topics list\n      await dispatch(fetchTopics());\n    } catch (error) {\n      console.error(\"Error deleting topic:\", error);\n    }\n  };\n\n  // const handleEditClick = (topic) => {\n  //   setEditingTopic(topic);\n  //   setShowForm(true);\n  // };\n  const handleEditClick = topic => {\n    openModal(\"edit\", topic);\n  };\n\n  // const handleTopicSubmit = ({ topicId, title, description }) => {\n  //   if (topicId) {\n  //     // If topicId is present, it's an edit action\n  //     dispatch(editTopic(topicId, { title, description }));\n  //   } else {\n  //     // Handle create topic action\n  //   }\n  // };\n\n  const handleVote = topicId => {\n    if (!user) {\n      alert(\"You must be logged in to vote\");\n      return;\n    }\n    dispatch(castVote(topicId));\n  };\n  const handleUnvote = topicId => {\n    dispatch(removeVote(topicId));\n  };\n  const handleCancelEdit = () => {\n    setEditingTopic(null); // Exit editing mode without saving\n  };\n\n  if (!topics || topics.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading topics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 12\n    }, this);\n  }\n  if (!Array.isArray(topics)) {\n    console.error(\"Expected topics to be an array but got:\", topics);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: Topics data is not an array.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n  const openModal = function (mode) {\n    let topic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    setModalMode(mode);\n    setEditingTopic(topic);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTopic(null); // Reset editing topic\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"woow\",\n          children: \"Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), user ?\n        /*#__PURE__*/\n        // If user is logged in, show 'Create New Topic' button\n        _jsxDEV(\"button\", {\n          onClick: () => openModal(\"create\"),\n          className: \"new-topic-form-button\",\n          children: \"Create New Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // If user is not logged in, show 'Log in to Propose a New Topic' button\n        _jsxDEV(\"button\", {\n          onClick: handleLoginRedirect,\n          className: \"login-to-propose-button\",\n          children: \"Log in to Propose a New Topic!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-describe\",\n          children: \"Vote on a topic you would like to discuss. The topic with the most votes by midnight will become tomorrow's Topic of the Day!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-vote\",\n          children: \"WARNING: You only get one vote per day, so use it wisely.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: closeModal,\n        children: /*#__PURE__*/_jsxDEV(TopicForm, {\n          mode: modalMode,\n          existingTopic: editingTopic,\n          onSubmit: modalMode === \"edit\" ? handleEditTopic : handleCreateTopic,\n          onCancel: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedTopics.length > 0 && sortedTopics.map(topic => topic && /*#__PURE__*/_jsxDEV(Topic, {\n            topic: topic,\n            onEdit: handleEditClick\n            // onDelete={handleDeleteTopic}\n            ,\n            onDelete: () => handleDeleteClick(topic),\n            onVote: handleVote,\n            onUnvote: handleUnvote,\n            userOwns: (topic === null || topic === void 0 ? void 0 : topic.user_id) === (user === null || user === void 0 ? void 0 : user.id)\n          }, topic.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n          isOpen: showDeleteConfirmation,\n          onClose: closeDeleteConfirmation,\n          onConfirm: confirmDelete,\n          children: \"Are you sure you want to delete your topic proposal?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TopicList, \"Ufwf2ZD652jbkzFbGTpzGARFWhs=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector];\n});\n_c = TopicList;\nexport default TopicList;\nvar _c;\n$RefreshReg$(_c, \"TopicList\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Topic","TopicForm","fetchTopics","editTopic","createTopic","removeTopic","checkUserVote","castVote","removeVote","Modal","ConfirmationModal","useHistory","TopicList","dispatch","history","topics","state","Object","values","user","session","showForm","setShowForm","editingTopic","setEditingTopic","topicsObject","topicsArray","isModalOpen","setIsModalOpen","modalMode","setModalMode","showDeleteConfirmation","setShowDeleteConfirmation","topicToDelete","setTopicToDelete","sortedTopics","sort","a","b","Date","created_at","catch","console","error","handleLoginRedirect","push","handleCreateTopic","topicData","res","errors","closeModal","handleCreateButtonClick","alert","handleEditTopic","topicId","log","response","handleDeleteClick","topic","closeDeleteConfirmation","confirmDelete","handleDeleteTopic","id","fetch","method","ok","Error","handleEditClick","openModal","handleVote","handleUnvote","handleCancelEdit","length","Array","isArray","mode","map","user_id"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Topic from \"./Topic\";\nimport TopicForm from \"./TopicForm\";\nimport {\n  fetchTopics,\n  editTopic,\n  createTopic,\n  removeTopic,\n  checkUserVote,\n} from \"../../store/topics\";\nimport { castVote, removeVote } from \"../../store/topics\";\nimport Modal from \"./TopicModal\";\nimport ConfirmationModal from \"./TopicDeleteConfirm\";\n\nimport { useHistory } from \"react-router-dom\";\nimport \"./topic.css\";\n\nconst TopicList = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const topics = useSelector((state) => Object.values(state.topics));\n  // let topics = useSelector((state) => state.topics);\n  // topics = Object.values(topics);\n  const user = useSelector((state) => state.session.user);\n  const [showForm, setShowForm] = useState(false);\n  const [editingTopic, setEditingTopic] = useState(null); // maybe change out of null\n\n  const topicsObject = useSelector((state) => state.topics);\n  const topicsArray = topicsObject && Object.values(topicsObject);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMode, setModalMode] = useState(\"create\");\n\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [topicToDelete, setTopicToDelete] = useState(null);\n\n  const sortedTopics = topicsArray.sort(\n    (a, b) => new Date(b?.created_at) - new Date(a?.created_at)\n  );\n\n  useEffect(() => {\n    dispatch(checkUserVote());\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchTopics()).catch(console.error);\n  }, [dispatch]);\n\n  const handleLoginRedirect = () => {\n    history.push(\"/login\"); // Redirect to login page\n  };\n\n  const handleCreateTopic = async (topicData) => {\n    try {\n      const res = await dispatch(createTopic(topicData));\n      if (!res.errors) {\n        closeModal(); // Close the modal after successful topic creation\n        dispatch(fetchTopics());\n      } else {\n        console.error(\"Failed to create topic:\", res.errors);\n      }\n    } catch (error) {\n      console.error(\"Error creating topic:\", error);\n    }\n  };\n\n  const handleCreateButtonClick = () => {\n    if (!user) {\n      alert(\"You must be logged in to propose a topic\");\n      return;\n    }\n    setShowForm(true);\n    setEditingTopic(null);\n  };\n\n  //need to push newest topic to top of list\n\n  // const handleEditTopic = async (topicData) => {\n  //   try {\n  //     const res = await dispatch(editTopic(editingTopic.id, topicData));\n  //     if (!res.errors) {\n  //       setShowForm(false);\n  //       setEditingTopic(null);\n  //       dispatch(fetchTopics());\n  //     } else {\n  //       console.error(\"Failed to update topic:\", res.errors);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error updating topic:\", error);\n  //   }\n  // };\n\n  const handleEditTopic = async (topicId, topicData) => {\n    try {\n      const res = await dispatch(editTopic(topicId, topicData));\n      if (!res.errors) {\n        closeModal(); // Close the modal after successful topic edit\n        dispatch(fetchTopics());\n      } else {\n        console.error(\"Failed to update topic:\", res.errors);\n      }\n    } catch (error) {\n      console.error(\"Error updating topic:\", error);\n      console.log(\"Received response:\", error.response);\n    }\n  };\n  \n  \n\n  // you can do this without having to dispathc fetchTopics again\n\n  // const handleDeleteTopic = async (topicId) => {\n  //     try {\n  //         const response = await fetch(`/api/topics/${topicId}`, { method: 'DELETE' });\n  //         if (!response.ok) throw new Error('Network response was not ok');\n  //         dispatch(removeTopic(topicId));\n  //     } catch (error) {\n  //         console.error('Error deleting topic:', error);\n  //     }\n  // };\n\n  const handleDeleteClick = (topic) => {\n    // Save the topic to delete and show confirmation modal\n    setTopicToDelete(topic);\n    setShowDeleteConfirmation(true);\n  };\n\n  const closeDeleteConfirmation = () => {\n    // Close the confirmation modal and reset the topic to delete\n    setShowDeleteConfirmation(false);\n    setTopicToDelete(null);\n  };\n\n  const confirmDelete = async () => {\n    if (topicToDelete) {\n      await handleDeleteTopic(topicToDelete.id);\n    }\n    closeDeleteConfirmation();\n  };\n\n  const handleDeleteTopic = async (topicId) => {\n    try {\n      const response = await fetch(`/api/topics/${topicId}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      dispatch(removeTopic(topicId));\n      // Wait for state update before trying to re-render the topics list\n      await dispatch(fetchTopics());\n    } catch (error) {\n      console.error(\"Error deleting topic:\", error);\n    }\n  };\n\n  // const handleEditClick = (topic) => {\n  //   setEditingTopic(topic);\n  //   setShowForm(true);\n  // };\n  const handleEditClick = (topic) => {\n    openModal(\"edit\", topic);\n  };\n\n  // const handleTopicSubmit = ({ topicId, title, description }) => {\n  //   if (topicId) {\n  //     // If topicId is present, it's an edit action\n  //     dispatch(editTopic(topicId, { title, description }));\n  //   } else {\n  //     // Handle create topic action\n  //   }\n  // };\n  \n  \n\n  const handleVote = (topicId) => {\n    if (!user) {\n      alert(\"You must be logged in to vote\");\n      return;\n    }\n    dispatch(castVote(topicId));\n  };\n\n  const handleUnvote = (topicId) => {\n    dispatch(removeVote(topicId));\n  };\n\n\n  const handleCancelEdit = () => {\n    setEditingTopic(null); // Exit editing mode without saving\n  };\n\n  if (!topics || topics.length === 0) {\n    return <p>Loading topics...</p>;\n  }\n\n  if (!Array.isArray(topics)) {\n    console.error(\"Expected topics to be an array but got:\", topics);\n    return <p>Error: Topics data is not an array.</p>;\n  }\n\n  const openModal = (mode, topic = null) => {\n    setModalMode(mode);\n    setEditingTopic(topic);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTopic(null); // Reset editing topic\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"topic-list-container\">\n          <h1 className=\"woow\">Topics</h1>\n          {/* <button\n            onClick={() => {\n              setShowForm(true);\n              setEditingTopic(null); // Reset editing topic\n            }}\n          >\n            Create New Topic\n          </button> */}\n          {user ? (\n            // If user is logged in, show 'Create New Topic' button\n            <button\n              onClick={() => openModal(\"create\")}\n              className=\"new-topic-form-button\"\n            >\n              Create New Topic\n            </button>\n          ) : (\n            // If user is not logged in, show 'Log in to Propose a New Topic' button\n            <button\n              onClick={handleLoginRedirect}\n              className=\"login-to-propose-button\"\n            >\n              Log in to Propose a New Topic!\n            </button>\n          )}\n          <div className=\"vote-describe\">\n            Vote on a topic you would like to discuss. The topic with the most\n            votes by midnight will become tomorrow's Topic of the Day!\n          </div>\n          <div className=\"one-vote\">\n            WARNING: You only get one vote per day, so use it wisely.\n          </div>\n        </div>\n        {/* <div>\n          {showForm && (\n            <TopicForm\n              existingTopic={editingTopic}\n              onSubmit={editingTopic ? handleEditTopic : handleCreateTopic}\n              onCancel={() => {\n                setShowForm(false);\n                setEditingTopic(null);\n              }}\n            />\n          )}\n        </div> */}\n\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <TopicForm\n            mode={modalMode}\n            existingTopic={editingTopic}\n            onSubmit={\n              modalMode === \"edit\" ? handleEditTopic : handleCreateTopic\n            }\n            onCancel={closeModal}\n          />\n        </Modal>\n\n        <div>\n          <ul>\n            {sortedTopics.length > 0 &&\n              sortedTopics.map(\n                (topic) =>\n                  topic && (\n                    <Topic\n                      key={topic.id}\n                      topic={topic}\n                      onEdit={handleEditClick}\n                      // onDelete={handleDeleteTopic}\n                      onDelete={() => handleDeleteClick(topic)}\n                      onVote={handleVote}\n                      onUnvote={handleUnvote}\n                      userOwns={topic?.user_id === user?.id}\n                    />\n                  )\n              )}\n\n            {/* {sortedTopics.length > 0 &&\n              sortedTopics.map(\n                (\n                  topic //console.log the topic here\n                ) => (\n                  <Topic\n                    key={topic ? topic.id : undefined}\n                    topic={topic}\n                    onEdit={handleEditClick}\n                    // onDelete={handleDeleteTopic}\n                    onDelete={() => handleDeleteClick(topic)}\n                    onVote={handleVote}\n                    onUnvote={handleUnvote}\n                    userOwns={topic?.user_id === user?.id}\n                  />\n                )\n              )} */}\n          </ul>\n\n          <ConfirmationModal\n            isOpen={showDeleteConfirmation}\n            onClose={closeDeleteConfirmation}\n            onConfirm={confirmDelete}\n          >\n            Are you sure you want to delete your topic proposal?\n          </ConfirmationModal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TopicList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}