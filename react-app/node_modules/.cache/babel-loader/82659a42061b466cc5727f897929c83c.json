{"ast":null,"code":"// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\nconst initialState = {\n  user: null\n};\nexport const authenticate = () => async dispatch => {\n  try {\n    const response = await fetch(\"/api/auth/\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      if (data.errors) {\n        return;\n      }\n      dispatch(setUser(data));\n    } else {\n      const errorData = await response.json();\n      console.error(\"Authenticate Error:\", errorData);\n    }\n  } catch (error) {\n    console.error(\"Network Error:\", error);\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    const response = await fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      credentials: 'include' // Include cookies with the request\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      dispatch(setUser(data));\n      return null;\n    } else if (response.status < 500) {\n      const data = await response.json();\n      if (data.errors) {\n        return data.errors;\n      }\n    } else {\n      return [\"An error occurred. Please try again.\"];\n    }\n  } catch (error) {\n    console.error(\"Network Error:\", error);\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    const response = await fetch(\"/api/auth/logout\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      dispatch(removeUser());\n    } else {\n      const errorData = await response.json();\n      console.error(\"Logout Error:\", errorData);\n    }\n  } catch (error) {\n    console.error(\"Network Error:\", error);\n  }\n};\nexport const signUp = (username, email, password) => async dispatch => {\n  try {\n    const response = await fetch(\"/api/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      dispatch(setUser(data));\n      return null;\n    } else if (response.status < 500) {\n      const data = await response.json();\n      if (data.errors) {\n        return data.errors;\n      }\n    } else {\n      return [\"An error occurred. Please try again.\"];\n    }\n  } catch (error) {\n    console.error(\"Network Error:\", error);\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER:\n      return {\n        user: action.payload\n      };\n    case REMOVE_USER:\n      return {\n        user: null\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","initialState","authenticate","dispatch","response","fetch","headers","ok","data","json","errors","errorData","console","error","login","email","password","method","body","JSON","stringify","credentials","status","logout","signUp","username","reducer","state","action"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/store/session.js"],"sourcesContent":["// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\n\nconst setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nconst removeUser = () => ({\n\ttype: REMOVE_USER,\n});\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n\ttry {\n\t\tconst response = await fetch(\"/api/auth/\", {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t});\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tif (data.errors) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdispatch(setUser(data));\n\t\t} else {\n\t\t\tconst errorData = await response.json();\n\t\t\tconsole.error(\"Authenticate Error:\", errorData);\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Network Error:\", error);\n\t}\n};\n\nexport const login = (email, password) => async (dispatch) => {\n\ttry {\n\t\tconst response = await fetch(\"/api/auth/login\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t\tcredentials: 'include', // Include cookies with the request\n\t\t});\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tdispatch(setUser(data));\n\t\t\treturn null;\n\t\t} else if (response.status < 500) {\n\t\t\tconst data = await response.json();\n\t\t\tif (data.errors) {\n\t\t\t\treturn data.errors;\n\t\t\t}\n\t\t} else {\n\t\t\treturn [\"An error occurred. Please try again.\"];\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Network Error:\", error);\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport const logout = () => async (dispatch) => {\n\ttry {\n\t\tconst response = await fetch(\"/api/auth/logout\", {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t});\n\t\tif (response.ok) {\n\t\t\tdispatch(removeUser());\n\t\t} else {\n\t\t\tconst errorData = await response.json();\n\t\t\tconsole.error(\"Logout Error:\", errorData);\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Network Error:\", error);\n\t}\n};\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n\ttry {\n\t\tconst response = await fetch(\"/api/auth/signup\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tusername,\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t});\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tdispatch(setUser(data));\n\t\t\treturn null;\n\t\t} else if (response.status < 500) {\n\t\t\tconst data = await response.json();\n\t\t\tif (data.errors) {\n\t\t\t\treturn data.errors;\n\t\t\t}\n\t\t} else {\n\t\t\treturn [\"An error occurred. Please try again.\"];\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Network Error:\", error);\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport default function reducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { user: action.payload };\n\t\tcase REMOVE_USER:\n\t\t\treturn { user: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}