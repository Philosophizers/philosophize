{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/SignupFormModal/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useModal } from \"../../context/Modal\";\nimport { signUp, authenticate } from \"../../store/session\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignupForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignupFormModal() {\n  _s();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const sessionMember = useSelector(state => state.session.member);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const {\n    closeModal\n  } = useModal();\n  const history = useHistory();\n  const [errors, setErrors] = useState([]);\n  const disabled = !username || !email || !password || !confirmPassword;\n  if (sessionMember) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 29\n  }, this);\n  function isEmail(val) {\n    let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!regEmail.test(val)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let errorList = {};\n    const response = await fetch(\"/api/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    });\n    const checkUnique = await fetch('/api/auth/validate-unique', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email\n      })\n    });\n    if (!checkUnique.ok) {\n      const uniqueErrors = await checkUnique.json();\n      setErrors(prev => ({\n        ...prev,\n        ...uniqueErrors\n      }));\n      return;\n    }\n    const data = await response.json();\n    if (!response.ok) {\n      // Assuming the server responds with a status code of 400 or similar on error\n      setErrors(data.errors || [\"An unexpected error occurred.\"]);\n    } else {\n      closeModal();\n      history.push(\"/\");\n    }\n    if (!username) errorList.username = \"Username is required\";\n    if (!email || !email.includes(\"@\")) errorList.email = \"Valid email is required\";\n    if (!password || password.length < 6) errorList.password = \"Password must be at least 6 characters\";\n    if (!confirmPassword) errorList.confirmPassword = \"Confirm Password is required\";\n    if (!isEmail(email)) errorList.email = \"Valid email is required\";\n    if (password.length < 6) errorList.password = \"Password must be at least 6 characters\";\n    if (password !== confirmPassword) errorList.confirmPassword = \"Passwords must match\";\n    if (Object.values(errorList).length > 0) {\n      setErrors(errorList);\n      return;\n    }\n    if (password === confirmPassword) {\n      setErrors({});\n      const response = await dispatch(signUp({\n        username,\n        email,\n        password\n      })).catch(res => res);\n      if (response && response[0].startsWith(\"email\")) {\n        const errorList_email = {\n          \"email\": response[0].slice(8)\n        };\n        setErrors(errorList_email);\n      } else {\n        dispatch(authenticate());\n        history.push('/');\n      }\n    } else {\n      return setErrors({\n        confirmPassword: \"Confirm Password field must be the same as the Password field\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"close-modal-button\",\n            children: \"Back to Home Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"10px\",\n              color: \"red\"\n            },\n            children: [\"*\", errors.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"10px\",\n              color: \"red\"\n            },\n            children: [\"*\", errors.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"10px\",\n              color: \"red\"\n            },\n            children: [\"*\", errors.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => {\n              setConfirmPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"10px\",\n              color: \"red\"\n            },\n            children: [\"*\", errors.confirmPassword]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Already have an account? Log in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SignupFormModal, \"XdEsjwzc7cE9TEbyyPYh6CM+wQU=\", false, function () {\n  return [useDispatch, useSelector, useModal, useHistory];\n});\n_c = SignupFormModal;\nexport default SignupFormModal;\nvar _c;\n$RefreshReg$(_c, \"SignupFormModal\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Redirect","useHistory","useModal","signUp","authenticate","Link","SignupFormModal","dispatch","email","setEmail","sessionMember","state","session","member","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","closeModal","history","errors","setErrors","disabled","isEmail","val","regEmail","test","handleSubmit","e","preventDefault","errorList","response","fetch","method","headers","body","JSON","stringify","checkUnique","ok","uniqueErrors","json","prev","data","push","includes","length","Object","values","catch","res","startsWith","errorList_email","slice","target","value","fontSize","color"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/SignupFormModal/index.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useModal } from \"../../context/Modal\";\nimport { signUp, authenticate } from \"../../store/session\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormModal() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const sessionMember = useSelector((state) => state.session.member)\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const { closeModal } = useModal();\n  const history = useHistory();\n  const [errors, setErrors] = useState([]);\n  \n\n  const disabled =\n    !username||\n    !email ||\n    !password ||\n    !confirmPassword;\n\n  if (sessionMember) return <Redirect to=\"/\" />;\n\n  function isEmail(val) {\n    let regEmail =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!regEmail.test(val)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let errorList = {};\n\n    const response = await fetch(\"/api/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n      }),\n    });\n\n    const checkUnique = await fetch('/api/auth/validate-unique', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, email }),\n    });\n  \n    if (!checkUnique.ok) {\n      const uniqueErrors = await checkUnique.json();\n      setErrors(prev => ({ ...prev, ...uniqueErrors }));\n      return;\n    }\n\n\n    const data = await response.json();\n    if (!response.ok) {\n      // Assuming the server responds with a status code of 400 or similar on error\n      setErrors(data.errors || [\"An unexpected error occurred.\"]);\n    } else {\n      closeModal();\n      history.push(\"/\");\n    }\n\n    if (!username) errorList.username = \"Username is required\";\n    if (!email || !email.includes(\"@\"))\n      errorList.email = \"Valid email is required\";\n    if (!password || password.length<6) errorList.password = \"Password must be at least 6 characters\";\n    if (!confirmPassword) errorList.confirmPassword = \"Confirm Password is required\";\n    if (!isEmail(email)) errorList.email = \"Valid email is required\";\n    if (password.length < 6) errorList.password = \"Password must be at least 6 characters\";\n    if (password !== confirmPassword)\n      errorList.confirmPassword = \"Passwords must match\";\n\n    if (Object.values(errorList).length > 0) {\n      setErrors(errorList);\n      return;\n    }\n\n    if (password === confirmPassword) {\n      setErrors({});\n      const response = await dispatch(\n        signUp({\n          username,\n          email,\n          password,\n        })\n      ).catch((res) => res);\n      if (response && response[0].startsWith(\"email\")) {\n        const errorList_email = { \"email\": response[0].slice(8) };\n        setErrors(errorList_email);\n      } else {\n        dispatch(authenticate());\n        history.push('/')\n      }\n    } else {\n    return setErrors({\n      confirmPassword:\n        \"Confirm Password field must be the same as the Password field\",\n    });\n  }\n  };\n\n  return (\n    <>\n      <div className=\"modal-backdrop\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">Sign Up</div>\n          <form onSubmit={handleSubmit} className=\"modal-form\">\n            <Link to=\"/\" className=\"close-modal-button\">\n              Back to Home Page\n            </Link>\n            <label>\n            Username\n            </label>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            {errors.username && (\n              <p style={{ fontSize: \"10px\", color: \"red\" }}>\n                *{errors.username}\n              </p>\n            )}\n            <label>\n            Email\n            </label>\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            {errors.email && (\n              <p style={{ fontSize: \"10px\", color: \"red\" }}>*{errors.email}</p>\n            )}\n            <label>\n            Password\n            </label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            {errors.password && (\n              <p style={{ fontSize: \"10px\", color: \"red\" }}>\n                *{errors.password}\n              </p>\n            )}\n\n          <label>\n            Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => {\n                setConfirmPassword(e.target.value);\n              }}\n            />\n            {errors.confirmPassword && (\n              <p style={{ fontSize: \"10px\", color: \"red\" }}>\n                *{errors.confirmPassword}\n              </p>\n            )}\n            <button type=\"submit\">Sign Up</button>\n          </form>\n          <div className=\"modal-link\">\n            <a href=\"/login\">Already have an account? Log in!</a>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SignupFormModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}