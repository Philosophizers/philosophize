{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/LoginFormModal/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { login } from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { useModal } from \"../../context/Modal\";\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginFormModal() {\n  _s();\n  var _location$state, _location$state$from;\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const {\n    closeModal\n  } = useModal();\n  const history = useHistory();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 27\n  }, this);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors({}); // Reset errors\n\n    const response = await fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      var _data$errors, _data$errors2;\n      // Handle errors based on response\n      if ((_data$errors = data.errors) === null || _data$errors === void 0 ? void 0 : _data$errors.email) {\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          email: \"Email does not exist\"\n        }));\n      }\n      if ((_data$errors2 = data.errors) === null || _data$errors2 === void 0 ? void 0 : _data$errors2.password) {\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          password: \"Email or password is invalid\"\n        }));\n      }\n    } else {\n      dispatch(authenticate()); // Your login logic here\n      history.push(\"/\"); // Redirect to home or intended page\n    }\n  };\n\n  const handleDemoLogin = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    setEmail(\"plato@socrates.com\"); // Set demo credentials\n    setPassword(\"demopassword\");\n    const data = dispatch(login(\"plato@socrates.com\", \"demopassword\"));\n    if (data) {\n      setErrors(data);\n    }\n    // else {\n    //   // Clear the form fields after successful login\n    //   closeModal()\n    // }\n    closeModal();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"close-modal-button\",\n            children: \"\\u2B05\\uFE0F Back to Home Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inbox\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"10px\",\n              color: \"red\"\n            },\n            children: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inbox\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"10px\",\n              color: \"red\"\n            },\n            children: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDemoLogin,\n            children: \"Log in as Demo Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/signup\",\n            children: \"Don't have an account? Sign Up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LoginFormModal, \"eNrxoBSp67/VhwDxULObGxUcQhM=\", false, function () {\n  return [useDispatch, useSelector, useModal, useHistory, useLocation];\n});\n_c = LoginFormModal;\nexport default LoginFormModal;\nvar _c;\n$RefreshReg$(_c, \"LoginFormModal\");","map":{"version":3,"names":["React","useState","login","useDispatch","useSelector","Redirect","useModal","useHistory","Link","useLocation","LoginFormModal","dispatch","sessionUser","state","session","user","email","setEmail","password","setPassword","errors","setErrors","closeModal","history","location","from","pathname","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","prevErrors","authenticate","push","handleDemoLogin","target","value","length","fontSize","color"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/LoginFormModal/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { login } from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { useModal } from \"../../context/Modal\";\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\nimport \"./LoginForm.css\";\n\nfunction LoginFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const { closeModal } = useModal();\n  const history = useHistory();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || \"/\";\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors({}); // Reset errors\n\n    const response = await fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n\n    const data = await response.json();\n    if (!response.ok) {\n      // Handle errors based on response\n      if (data.errors?.email) {\n        setErrors((prevErrors) => ({ ...prevErrors, email: \"Email does not exist\" }));\n      }\n      if (data.errors?.password) {\n        setErrors((prevErrors) => ({ ...prevErrors, password: \"Email or password is invalid\" }));\n      }\n    } else {\n      dispatch(authenticate()); // Your login logic here\n      history.push(\"/\"); // Redirect to home or intended page\n    }\n  };\n\n  const handleDemoLogin = (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    setEmail(\"plato@socrates.com\"); // Set demo credentials\n    setPassword(\"demopassword\");\n    const data = dispatch(login(\"plato@socrates.com\", \"demopassword\"));\n    if (data) {\n      setErrors(data);\n    }\n    // else {\n    //   // Clear the form fields after successful login\n    //   closeModal()\n    // }\n    closeModal();\n  };\n\n\n\n  return (\n    <>\n      <div className=\"modal-backdrop\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">Log In</div>\n          <form onSubmit={handleSubmit} className=\"modal-form\">\n            <Link to=\"/\" className=\"close-modal-button\">\n              ⬅️ Back to Home Page\n            </Link>\n            {/* <ul>\n        {Array.isArray(errors) && errors.map((error, idx) => (\n          <li key={idx}>{error}</li>\n          ))}\n        </ul> */}\n            <label>Email</label>\n            <input\n              className=\"inbox\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            {errors.length > 0 && (\n              <p style={{ fontSize: \"10px\", color: \"red\" }}>{errors}</p>\n            )}\n\n            <label>Password</label>\n            <input\n              className=\"inbox\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            {errors.length > 0 && (\n              <p style={{ fontSize: \"10px\", color: \"red\" }}>{errors}</p>\n            )}\n            <button type=\"submit\">Log In</button>\n            <button onClick={handleDemoLogin}>Log in as Demo Member</button>\n          </form>\n          <div className=\"modal-link\">\n            <a href=\"/signup\">Don't have an account? Sign Up!</a>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginFormModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}