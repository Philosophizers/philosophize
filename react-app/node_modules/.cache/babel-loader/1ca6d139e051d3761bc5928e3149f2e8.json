{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/LoginFormModal/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { login } from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { useModal } from \"../../context/Modal\";\nimport { useHistory, Link } from 'react-router-dom';\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginFormModal() {\n  _s();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const {\n    closeModal\n  } = useModal();\n  const history = useHistory();\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 27\n  }, this);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    } else {\n      closeModal();\n    }\n  };\n  const handleDemoLogin = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    setEmail('plato@socrates.com'); // Set demo credentials\n    setPassword('demopassword');\n    const data = dispatch(login('plato@socrates.com', 'demopassword'));\n    if (data) {\n      setErrors(data);\n    }\n    // else {\n    //   // Clear the form fields after successful login\n    //   closeModal()\n    // }\n    closeModal();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"close-modal-button\",\n            children: \"\\u2B05\\uFE0F  Back to Home Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.isArray(errors) && errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inbox\",\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inbox\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDemoLogin,\n            children: \"Log in as Demo Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/signup\",\n            children: \"Don't have an account? Sign Up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(LoginFormModal, \"M9uFtKEs7dVGitLJwXE9w6TQvSY=\", false, function () {\n  return [useDispatch, useSelector, useModal, useHistory];\n});\n_c = LoginFormModal;\nexport default LoginFormModal;\nvar _c;\n$RefreshReg$(_c, \"LoginFormModal\");","map":{"version":3,"names":["React","useState","login","useDispatch","useSelector","Redirect","useModal","useHistory","Link","LoginFormModal","dispatch","sessionUser","state","session","user","email","setEmail","password","setPassword","errors","setErrors","closeModal","history","handleSubmit","e","preventDefault","data","handleDemoLogin","Array","isArray","map","error","idx","target","value"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/LoginFormModal/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { login } from \"../../store/session\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { useModal } from \"../../context/Modal\";\nimport { useHistory,Link } from 'react-router-dom';\nimport \"./LoginForm.css\";\n\nfunction LoginFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const { closeModal } = useModal();\n  const history = useHistory();\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    } else {\n        closeModal()\n    }\n  };\n\n  const handleDemoLogin = (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    setEmail('plato@socrates.com'); // Set demo credentials\n    setPassword('demopassword');\n    const data = dispatch(login('plato@socrates.com', 'demopassword'));\n    if (data) {\n      setErrors(data);\n    } \n    // else {\n    //   // Clear the form fields after successful login\n    //   closeModal()\n    // }\n    closeModal();\n  };\n\n  return (\n    <>\n    <div className=\"modal-backdrop\">\n  <div className=\"modal-content\">\n    <div className=\"modal-header\">Log In</div>\n    <form onSubmit={handleSubmit} className=\"modal-form\">\n    <Link to=\"/\" className=\"close-modal-button\">⬅️  Back to Home Page</Link>\n        <ul>\n        {Array.isArray(errors) && errors.map((error, idx) => (\n          <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          Email\n          <br></br>\n          <input className=\"inbox\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <br></br>\n          <input className=\"inbox\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Log In</button>\n        <button onClick={handleDemoLogin}>Log in as Demo Member</button>\n      </form>\n      <div className=\"modal-link\">\n      <a href=\"/signup\">Don't have an account? Sign Up!</a>\n    </div>\n  </div>\n</div>\n    </>\n  );\n}\n\nexport default LoginFormModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}