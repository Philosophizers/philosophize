{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Topic from './Topic';\n\n// const TopicList = () => {\n//     const [topics, setTopics] = useState([]);\n\n//     useEffect(() => {\n//       const fetchTopics = async () => {\n//         try {\n//           const response = await fetch('/api/topics'); // Adjust the URL based on your API endpoint\n//           if (!response.ok) throw new Error('Network response was not ok');\n//           const data = await response.json();\n//           setTopics(data); // Make sure the key matches what your backend sends\n//         } catch (error) {\n//           console.error('Error fetching topics:', error);\n//         }\n//       };\n\n//       fetchTopics();\n//     }, []);\n\n//     return (\n//         <div>\n//           <h1>Topics</h1>\n//           <ul>\n//             {topics.length > 0 ? (\n//               topics.map(topic => (\n//                 <Topic key={topic.id} topic={topic} />\n//               ))\n//             ) : (\n//               <p>Loading topics...</p>\n//             )}\n//           </ul>\n//         </div>\n//       );\n\n//     };\n\n// export default TopicList;\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Topic from './Topic';\nimport TopicForm from './TopicForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicList = () => {\n  _s();\n  const [topics, setTopics] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingTopic, setEditingTopic] = useState(null);\n  useEffect(() => {\n    fetchTopics();\n  }, []);\n  const fetchTopics = async () => {\n    try {\n      const response = await fetch('/api/topics');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setTopics(data);\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n    }\n  };\n  const dispatch = useDispatch();\n  const handleCreateOrUpdateTopic = async topicData => {\n    // Determine the HTTP method and URL based on whether we are creating or updating a topic\n    const method = editingTopic ? 'PUT' : 'POST';\n    const url = editingTopic ? `/api/topics/${editingTopic.id}` : '/api/topics';\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(topicData)\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      setShowForm(false);\n      setEditingTopic(null);\n      fetchTopics(); // Refresh the list of topics\n    } catch (error) {\n      console.error('Error submitting topic:', error);\n    }\n  };\n  const handleDeleteTopic = async topicId => {\n    try {\n      const response = await fetch(`/api/topics/${topicId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      fetchTopics(); // Refresh the list of topics\n    } catch (error) {\n      console.error('Error deleting topic:', error);\n    }\n  };\n  const handleEditClick = topic => {\n    setEditingTopic(topic);\n    setShowForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      children: \"Create New Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(TopicForm, {\n      existingTopic: editingTopic,\n      onSubmit: handleCreateOrUpdateTopic,\n      onCancel: () => {\n        setShowForm(false);\n        setEditingTopic(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topics.length > 0 ? topics.map(topic => /*#__PURE__*/_jsxDEV(Topic, {\n        topic: topic,\n        onEdit: handleEditClick,\n        onDelete: handleDeleteTopic\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading topics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicList, \"5NWOKHBliJMMx8wtHKGnpGwnUcs=\", false, function () {\n  return [useDispatch];\n});\n_c = TopicList;\nexport default TopicList;\nvar _c;\n$RefreshReg$(_c, \"TopicList\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","Topic","TopicForm","TopicList","topics","setTopics","showForm","setShowForm","editingTopic","setEditingTopic","fetchTopics","response","fetch","ok","Error","data","json","error","console","dispatch","handleCreateOrUpdateTopic","topicData","method","url","id","headers","body","JSON","stringify","handleDeleteTopic","topicId","handleEditClick","topic","length","map"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import Topic from './Topic';\n\n\n// const TopicList = () => {\n//     const [topics, setTopics] = useState([]);\n  \n//     useEffect(() => {\n//       const fetchTopics = async () => {\n//         try {\n//           const response = await fetch('/api/topics'); // Adjust the URL based on your API endpoint\n//           if (!response.ok) throw new Error('Network response was not ok');\n//           const data = await response.json();\n//           setTopics(data); // Make sure the key matches what your backend sends\n//         } catch (error) {\n//           console.error('Error fetching topics:', error);\n//         }\n//       };\n  \n//       fetchTopics();\n//     }, []);\n\n//     return (\n//         <div>\n//           <h1>Topics</h1>\n//           <ul>\n//             {topics.length > 0 ? (\n//               topics.map(topic => (\n//                 <Topic key={topic.id} topic={topic} />\n//               ))\n//             ) : (\n//               <p>Loading topics...</p>\n//             )}\n//           </ul>\n//         </div>\n//       );\n\n//     };\n      \n\n// export default TopicList;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Topic from './Topic';\nimport TopicForm from './TopicForm';\n\nconst TopicList = () => {\n  const [topics, setTopics] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingTopic, setEditingTopic] = useState(null);\n\n  useEffect(() => {\n    fetchTopics();\n  }, []);\n\n  const fetchTopics = async () => {\n    try {\n      const response = await fetch('/api/topics');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setTopics(data);\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleCreateOrUpdateTopic = async (topicData) => {\n    // Determine the HTTP method and URL based on whether we are creating or updating a topic\n    const method = editingTopic ? 'PUT' : 'POST';\n    const url = editingTopic ? `/api/topics/${editingTopic.id}` : '/api/topics';\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(topicData),\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      setShowForm(false);\n      setEditingTopic(null);\n      fetchTopics();  // Refresh the list of topics\n    } catch (error) {\n      console.error('Error submitting topic:', error);\n    }\n  };\n\n  const handleDeleteTopic = async (topicId) => {\n    try {\n      const response = await fetch(`/api/topics/${topicId}`, { method: 'DELETE' });\n      if (!response.ok) throw new Error('Network response was not ok');\n      fetchTopics();  // Refresh the list of topics\n    } catch (error) {\n      console.error('Error deleting topic:', error);\n    }\n  };\n\n  const handleEditClick = (topic) => {\n    setEditingTopic(topic);\n    setShowForm(true);\n  };\n\n  return (\n    <div>\n      <h1>Topics</h1>\n      <button onClick={() => setShowForm(true)}>Create New Topic</button>\n      {showForm && (\n        <TopicForm\n          existingTopic={editingTopic}\n          onSubmit={handleCreateOrUpdateTopic}\n          onCancel={() => {\n            setShowForm(false);\n            setEditingTopic(null);\n          }}\n        />\n      )}\n      <ul>\n        {topics.length > 0 ? (\n          topics.map(topic => (\n            <Topic\n              key={topic.id}\n              topic={topic}\n              onEdit={handleEditClick}\n              onDelete={handleDeleteTopic}\n            />\n          ))\n        ) : (\n          <p>Loading topics...</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default TopicList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}