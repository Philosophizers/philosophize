{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/CommentsPage/CommentsPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// // const LandingPage = () => {\n// //   const [topicOfTheDay, setTopicOfTheDay] = useState(null);\n\n// //   useEffect(() => {\n// //     // Fetch the Topic of the Day\n// //     const fetchTopicOfTheDay = async () => {\n// //       const response = await fetch('/api/topics/topic-of-the-day');\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         setTopicOfTheDay(data);\n// //       }\n// //     };\n\n// //     fetchTopicOfTheDay();\n// //   }, []);\n\n// const LandingPage = () => {\n//     const dispatch = useDispatch();\n//     const topicOfTheDay = useSelector(state => state.topics.topicOfTheDay);\n//     const comments = useSelector(state => Object.values(state.topics.comments));\n\n//     useEffect(() => {\n//         dispatch(fetchTopicOfTheDay());\n//     }, [dispatch]);\n\n//     useEffect(() => {\n//         if (topicOfTheDay) {\n//             dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n//         }\n//     }, [dispatch, topicOfTheDay]);\n\n//   return (\n//     <div>\n//       <h1>Topic of the Day</h1>\n//       {topicOfTheDay ? (\n//         <div>\n//           <h2>{topicOfTheDay.title}</h2>\n//           <p>{topicOfTheDay.description}</p>\n//           {/* Add more content such as comments here */}\n//         </div>\n//       ) : (\n//         <p>Loading topic...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default LandingPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTopicOfTheDay, fetchCommentsForTopic, createComment } from \"../../store/topics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const topicOfTheDay = useSelector(state => state.topics.topicOfTheDay);\n  const comments = useSelector(state => Object.values(state.topics.comments));\n  const [content, setContent] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    dispatch(fetchTopicOfTheDay());\n  }, [dispatch]);\n  useEffect(() => {\n    if (topicOfTheDay) {\n      dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n    }\n  }, [dispatch, topicOfTheDay]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newErrors = [];\n\n    // Validation logic here if needed\n\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    const commentData = {\n      content\n    };\n    try {\n      const res = await dispatch(createComment(topicOfTheDay.id, commentData));\n      if (!res.errors) {\n        dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n      } else {\n        console.error(\"Failed to create topic:\", res.errors);\n      }\n    } catch (error) {\n      console.error(\"Error creating topic:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), topicOfTheDay ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading topic...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsPage, \"oFqORRk8x2oS2ox0WT0nqmKX6Q0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CommentsPage;\nexport default CommentsPage;\nvar _c;\n$RefreshReg$(_c, \"CommentsPage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchTopicOfTheDay","fetchCommentsForTopic","createComment","CommentsPage","dispatch","topicOfTheDay","state","topics","comments","Object","values","content","setContent","errors","setErrors","id","handleSubmit","e","preventDefault","newErrors","length","commentData","res","console","error","map","comment","target","value"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/CommentsPage/CommentsPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// // const LandingPage = () => {\n// //   const [topicOfTheDay, setTopicOfTheDay] = useState(null);\n\n// //   useEffect(() => {\n// //     // Fetch the Topic of the Day\n// //     const fetchTopicOfTheDay = async () => {\n// //       const response = await fetch('/api/topics/topic-of-the-day');\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         setTopicOfTheDay(data);\n// //       }\n// //     };\n\n// //     fetchTopicOfTheDay();\n// //   }, []);\n\n// const LandingPage = () => {\n//     const dispatch = useDispatch();\n//     const topicOfTheDay = useSelector(state => state.topics.topicOfTheDay);\n//     const comments = useSelector(state => Object.values(state.topics.comments));\n\n//     useEffect(() => {\n//         dispatch(fetchTopicOfTheDay());\n//     }, [dispatch]);\n\n//     useEffect(() => {\n//         if (topicOfTheDay) {\n//             dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n//         }\n//     }, [dispatch, topicOfTheDay]);\n\n//   return (\n//     <div>\n//       <h1>Topic of the Day</h1>\n//       {topicOfTheDay ? (\n//         <div>\n//           <h2>{topicOfTheDay.title}</h2>\n//           <p>{topicOfTheDay.description}</p>\n//           {/* Add more content such as comments here */}\n//         </div>\n//       ) : (\n//         <p>Loading topic...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default LandingPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTopicOfTheDay, fetchCommentsForTopic, createComment } from \"../../store/topics\";\nconst CommentsPage = () => {\n  const dispatch = useDispatch();\n  const topicOfTheDay = useSelector((state) => state.topics.topicOfTheDay);\n  const comments = useSelector((state) => Object.values(state.topics.comments));\n  const [content, setContent] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchTopicOfTheDay());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (topicOfTheDay) {\n      dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n    }\n  }, [dispatch, topicOfTheDay]);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let newErrors = [];\n\n    // Validation logic here if needed\n\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const commentData = { content };\n    try {\n      const res = await dispatch(createComment(topicOfTheDay.id, commentData));\n      if (!res.errors) {\n        dispatch(fetchCommentsForTopic(topicOfTheDay.id));\n      } else {\n        console.error(\"Failed to create topic:\", res.errors);\n      }\n    } catch (error) {\n      console.error(\"Error creating topic:\", error);\n    }\n  };\n  return (\n    <div>\n      <h1>Comments</h1>\n      {topicOfTheDay ? (\n        <div>\n          <div>\n            {comments.map((comment) => (\n              <p key={comment.id}>{comment.content}</p>\n            ))}\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div>\n              <label>New Comment</label>\n              <input\n                type=\"text\"\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n              {errors.content && <p>{errors.content}</p>}\n            </div>\n            <button type=\"submit\">Create Comment</button>\n          </form>\n        </div>\n      ) : (\n        <p>Loading topic...</p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}