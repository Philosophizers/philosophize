{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/SignupFormModal/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { signUp } from \"../../store/session\";\nimport \"./SignupForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignupFormModal() {\n  _s();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const {\n    closeModal\n  } = useModal();\n  const history = useHistory();\n  function isEmail(val) {\n    let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!regEmail.test(val)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission\n    let hasErrors = false;\n    if (!hasErrors) {\n      const data = await dispatch(signUp(username, email, password));\n      if (data && data.errors) {\n        setErrors(data.errors);\n      } else {\n        closeModal(); // Close the modal only if there are no errors\n      }\n    }\n\n    if (isEmail(email)) {\n      if (password === confirmPassword) {\n        const data = await dispatch(signUp(username, email, password));\n        if (data) {\n          setErrors(data);\n        } else {\n          closeModal();\n        }\n      } else {\n        setErrors([\"Confirm Password field must be the same as the Password field\"]);\n      }\n    } else {\n      setErrors([\"email is invalid\"]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal-button\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Already have an account? Log in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SignupFormModal, \"lEiYKniGlZ8qqDx1dUTOnuvGE0I=\", true, function () {\n  return [useDispatch, useModal];\n});\n_c = SignupFormModal;\nexport default SignupFormModal;\nvar _c;\n$RefreshReg$(_c, \"SignupFormModal\");","map":{"version":3,"names":["React","useState","useDispatch","useModal","signUp","SignupFormModal","dispatch","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","closeModal","history","useHistory","isEmail","val","regEmail","test","handleSubmit","e","preventDefault","hasErrors","data","map","error","idx","target","value"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/SignupFormModal/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { signUp } from \"../../store/session\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormModal() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const { closeModal } = useModal();\n  const history = useHistory();\n\n  function isEmail(val) {\n    let regEmail =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!regEmail.test(val)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent the default form submission\n    let hasErrors = false;\n\n    \n\n    if (!hasErrors) {\n      const data = await dispatch(signUp(username, email, password));\n      if (data && data.errors) {\n        setErrors(data.errors);\n      } else {\n        closeModal(); // Close the modal only if there are no errors\n      }\n    }\n    if (isEmail(email)) {\n      if (password === confirmPassword) {\n        const data = await dispatch(signUp(username, email, password));\n        if (data) {\n          setErrors(data);\n        } else {\n          closeModal();\n        }\n      } else {\n        setErrors([\n          \"Confirm Password field must be the same as the Password field\",\n        ]);\n      }\n    } else {\n      setErrors([\"email is invalid\"]);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"modal-backdrop\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">Sign Up</div>\n          <form onSubmit={handleSubmit} className=\"modal-form\">\n            <button className=\"close-modal-button\" onClick={closeModal}>\n              &times;\n            </button>\n            <ul>\n              {errors.map((error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n            <label>\n              Email\n              <input\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </label>\n            <label>\n              Username\n              <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n            </label>\n            <label>\n              Password\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </label>\n            <label>\n              Confirm Password\n              <input\n                type=\"password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                required\n              />\n            </label>\n            <button type=\"submit\">Sign Up</button>\n          </form>\n          <div className=\"modal-link\">\n            <a href=\"/login\">Already have an account? Log in!</a>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SignupFormModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}