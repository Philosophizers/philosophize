{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Topic from './Topic';\n\n// const TopicList = () => {\n//     const [topics, setTopics] = useState([]);\n\n//     useEffect(() => {\n//       const fetchTopics = async () => {\n//         try {\n//           const response = await fetch('/api/topics'); // Adjust the URL based on your API endpoint\n//           if (!response.ok) throw new Error('Network response was not ok');\n//           const data = await response.json();\n//           setTopics(data); // Make sure the key matches what your backend sends\n//         } catch (error) {\n//           console.error('Error fetching topics:', error);\n//         }\n//       };\n\n//       fetchTopics();\n//     }, []);\n\n//     return (\n//         <div>\n//           <h1>Topics</h1>\n//           <ul>\n//             {topics.length > 0 ? (\n//               topics.map(topic => (\n//                 <Topic key={topic.id} topic={topic} />\n//               ))\n//             ) : (\n//               <p>Loading topics...</p>\n//             )}\n//           </ul>\n//         </div>\n//       );\n\n//     };\n\n// export default TopicList;\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import Topic from './Topic';\n// import TopicForm from './TopicForm';\n// import { addTopic } from '../../store/topics';\n\n// const TopicList = () => {\n//   const [topics, setTopics] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingTopic, setEditingTopic] = useState(null);\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Topic from './Topic';\nimport TopicForm from './TopicForm';\nimport { fetchTopics } from '../../store/topics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const topics = useSelector(state => state.topics); // Accessing topics from Redux store\n  const [showForm, setShowForm] = useState(false);\n  const [editingTopic, setEditingTopic] = useState(null);\n  useEffect(() => {\n    dispatch(fetchTopics());\n  }, [dispatch]);\n  const fetchTopics = async () => {\n    try {\n      const response = await fetch('/api/topics', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' // Include cookies with the request\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setTopics(data);\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n    }\n  };\n\n  //   const handleCreateOrUpdateTopic = async (topicData) => {\n  //     // Determine the HTTP method and URL based on whether we are creating or updating a topic\n  //     const method = editingTopic ? 'PUT' : 'POST';\n  //     const url = editingTopic ? `/api/topics/${editingTopic.id}` : '/api/topics';\n\n  //     try {\n  //       const response = await fetch(url, {\n  //         method,\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify(topicData),\n  //       });\n  //       if (!response.ok) throw new Error('Network response was not ok');\n  //       setShowForm(false);\n  //       setEditingTopic(null);\n  //       fetchTopics();  // Refresh the list of topics\n  //     } catch (error) {\n  //       console.error('Error submitting topic:', error);\n  //     }\n  //   };\n\n  const handleCreateOrUpdateTopic = async topicData => {\n    // Determine the HTTP method and URL based on whether we are creating or updating a topic\n    const method = editingTopic ? 'PUT' : 'POST';\n    const url = editingTopic ? `/api/topics/${editingTopic.id}` : '/api/topics';\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(topicData),\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const returnedTopic = await response.json();\n      if (!editingTopic) {\n        // Dispatch the Redux action here for adding a new topic\n        dispatch(addTopic(returnedTopic));\n      } else {}\n      setShowForm(false);\n      setEditingTopic(null);\n      fetchTopics(); // Refresh the list of topics\n    } catch (error) {\n      console.error('Error submitting topic:', error);\n    }\n  };\n  const handleDeleteTopic = async topicId => {\n    try {\n      const response = await fetch(`/api/topics/${topicId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      fetchTopics(); // Refresh the list of topics\n    } catch (error) {\n      console.error('Error deleting topic:', error);\n    }\n  };\n  const handleEditClick = topic => {\n    setEditingTopic(topic);\n    setShowForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      children: \"Create New Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(TopicForm, {\n      existingTopic: editingTopic,\n      onSubmit: handleCreateOrUpdateTopic,\n      onCancel: () => {\n        setShowForm(false);\n        setEditingTopic(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topics.length > 0 ? topics.map(topic => /*#__PURE__*/_jsxDEV(Topic, {\n        topic: topic,\n        onEdit: handleEditClick,\n        onDelete: handleDeleteTopic\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading topics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicList, \"A9DezvfOYCza2ATAJXKzQRUNnKs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TopicList;\nexport default TopicList;\nvar _c;\n$RefreshReg$(_c, \"TopicList\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Topic","TopicForm","fetchTopics","TopicList","dispatch","topics","state","showForm","setShowForm","editingTopic","setEditingTopic","response","fetch","method","headers","credentials","ok","Error","data","json","setTopics","error","console","handleCreateOrUpdateTopic","topicData","url","id","body","JSON","stringify","returnedTopic","addTopic","handleDeleteTopic","topicId","handleEditClick","topic","length","map"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import Topic from './Topic';\n\n\n// const TopicList = () => {\n//     const [topics, setTopics] = useState([]);\n  \n//     useEffect(() => {\n//       const fetchTopics = async () => {\n//         try {\n//           const response = await fetch('/api/topics'); // Adjust the URL based on your API endpoint\n//           if (!response.ok) throw new Error('Network response was not ok');\n//           const data = await response.json();\n//           setTopics(data); // Make sure the key matches what your backend sends\n//         } catch (error) {\n//           console.error('Error fetching topics:', error);\n//         }\n//       };\n  \n//       fetchTopics();\n//     }, []);\n\n//     return (\n//         <div>\n//           <h1>Topics</h1>\n//           <ul>\n//             {topics.length > 0 ? (\n//               topics.map(topic => (\n//                 <Topic key={topic.id} topic={topic} />\n//               ))\n//             ) : (\n//               <p>Loading topics...</p>\n//             )}\n//           </ul>\n//         </div>\n//       );\n\n//     };\n      \n\n// export default TopicList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import Topic from './Topic';\n// import TopicForm from './TopicForm';\n// import { addTopic } from '../../store/topics';\n\n// const TopicList = () => {\n//   const [topics, setTopics] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingTopic, setEditingTopic] = useState(null);\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Topic from './Topic';\nimport TopicForm from './TopicForm';\nimport { fetchTopics } from '../../store/topics';\n\nconst TopicList = () => {\n  const dispatch = useDispatch();\n  const topics = useSelector(state => state.topics); // Accessing topics from Redux store\n  const [showForm, setShowForm] = useState(false);\n  const [editingTopic, setEditingTopic] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchTopics());\n  }, [dispatch]);\n\n  const fetchTopics = async () => {\n    try {\n      const response = await fetch('/api/topics', {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include', // Include cookies with the request\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setTopics(data);\n    } catch (error) {\n      console.error('Error fetching topics:', error);\n    }\n  };\n  \n  \n  \n\n//   const handleCreateOrUpdateTopic = async (topicData) => {\n//     // Determine the HTTP method and URL based on whether we are creating or updating a topic\n//     const method = editingTopic ? 'PUT' : 'POST';\n//     const url = editingTopic ? `/api/topics/${editingTopic.id}` : '/api/topics';\n\n//     try {\n//       const response = await fetch(url, {\n//         method,\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(topicData),\n//       });\n//       if (!response.ok) throw new Error('Network response was not ok');\n//       setShowForm(false);\n//       setEditingTopic(null);\n//       fetchTopics();  // Refresh the list of topics\n//     } catch (error) {\n//       console.error('Error submitting topic:', error);\n//     }\n//   };\n\nconst handleCreateOrUpdateTopic = async (topicData) => {\n    // Determine the HTTP method and URL based on whether we are creating or updating a topic\n    const method = editingTopic ? 'PUT' : 'POST';\n    const url = editingTopic ? `/api/topics/${editingTopic.id}` : '/api/topics';\n  \n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(topicData),\n        credentials: 'include',\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n  \n      const returnedTopic = await response.json();\n  \n      if (!editingTopic) {\n        // Dispatch the Redux action here for adding a new topic\n        dispatch(addTopic(returnedTopic));\n      } else {\n\n      }\n  \n      setShowForm(false);\n      setEditingTopic(null);\n      fetchTopics();  // Refresh the list of topics\n    } catch (error) {\n      console.error('Error submitting topic:', error);\n    }\n  };\n  \n\n  const handleDeleteTopic = async (topicId) => {\n    try {\n      const response = await fetch(`/api/topics/${topicId}`, { method: 'DELETE' });\n      if (!response.ok) throw new Error('Network response was not ok');\n      fetchTopics();  // Refresh the list of topics\n    } catch (error) {\n      console.error('Error deleting topic:', error);\n    }\n  };\n\n  const handleEditClick = (topic) => {\n    setEditingTopic(topic);\n    setShowForm(true);\n  };\n\n  return (\n    <div>\n      <h1>Topics</h1>\n      <button onClick={() => setShowForm(true)}>Create New Topic</button>\n      {showForm && (\n        <TopicForm\n          existingTopic={editingTopic}\n          onSubmit={handleCreateOrUpdateTopic}\n          onCancel={() => {\n            setShowForm(false);\n            setEditingTopic(null);\n          }}\n        />\n      )}\n      <ul>\n        {topics.length > 0 ? (\n          topics.map(topic => (\n            <Topic\n              key={topic.id}\n              topic={topic}\n              onEdit={handleEditClick}\n              onDelete={handleDeleteTopic}\n            />\n          ))\n        ) : (\n          <p>Loading topics...</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default TopicList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}