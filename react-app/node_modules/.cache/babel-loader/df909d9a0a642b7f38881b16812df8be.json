{"ast":null,"code":"var _jsxFileName = \"/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicForm = _ref => {\n  _s();\n  let {\n    mode,\n    existingTopic,\n    onSubmit,\n    onCancel\n  } = _ref;\n  const [title, setTitle] = useState(existingTopic ? existingTopic.title : \"\");\n  const [description, setDescription] = useState(existingTopic ? existingTopic.description : \"\");\n  const [errors, setErrors] = useState([]);\n  const [titleError, setTitleError] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n  useEffect(() => {\n    if (existingTopic) {\n      setTitle(existingTopic.title);\n      setDescription(existingTopic.description);\n    }\n  }, [existingTopic]);\n  useEffect(() => {\n    if (title.length >= 10 && title.length <= 250) {\n      setTitleError(\"\");\n    } else if (title.length > 0) {\n      setTitleError(\"Title must be between 10 and 250 characters\");\n    }\n  }, [title]);\n  useEffect(() => {\n    if (description.length >= 50 && description.length <= 500) {\n      setDescriptionError(\"\");\n    } else if (description.length > 0) {\n      setDescriptionError(\"Description must be between 50 and 500 characters\");\n    }\n  }, [description]);\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     let newErrors = [];\n\n  //     if (newErrors.length > 0) {\n  //         setErrors(newErrors);\n  //         return;\n  //     }\n\n  //     const topicData = { title, description };\n  //     onSubmit(topicData); // Call the passed onSubmit function\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let hasErrors = false;\n\n    // Title validation\n    if (title.length < 10 || title.length > 250) {\n      setTitleError(\"Title must be between 10 and 250 characters\");\n      hasErrors = true;\n    } else {\n      setTitleError(\"\");\n    }\n\n    // Description validation\n    if (description.length < 50 || description.length > 500) {\n      setDescriptionError(\"Description must be between 50 and 500 characters\");\n      hasErrors = true;\n    } else {\n      setDescriptionError(\"\");\n    }\n    if (titleError || descriptionError || title.length === 0 || description.length === 0) {\n      // Handle the case when there are errors or fields are empty\n      return;\n    }\n    if (hasErrors) return;\n    const topicData = {\n      title,\n      description\n    };\n    onSubmit(topicData);\n  };\n  const TopicForm = _ref2 => {\n    let {\n      handleSubmit,\n      title,\n      setTitle,\n      description,\n      setDescription,\n      titleError,\n      descriptionError,\n      mode,\n      onCancel\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"topic-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          className: \"form-control\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), titleError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: titleError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          className: \"form-control\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), descriptionError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: descriptionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: mode === \"edit\" ? \"Update Topic\" : \"Create Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          className: \"cancel-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(TopicForm, \"lh6/UnEp7T/qIE4q0iRmafajSBY=\");\n_c = TopicForm;\nexport default TopicForm;\nvar _c;\n$RefreshReg$(_c, \"TopicForm\");","map":{"version":3,"names":["React","useState","useEffect","TopicForm","mode","existingTopic","onSubmit","onCancel","title","setTitle","description","setDescription","errors","setErrors","titleError","setTitleError","descriptionError","setDescriptionError","length","handleSubmit","e","preventDefault","hasErrors","topicData","target","value"],"sources":["/Users/yosephlatif/Desktop/philosophize/react-app/src/components/Topics/TopicForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst TopicForm = ({ mode, existingTopic, onSubmit, onCancel }) => {\n  const [title, setTitle] = useState(existingTopic ? existingTopic.title : \"\");\n  const [description, setDescription] = useState(\n    existingTopic ? existingTopic.description : \"\"\n  );\n  const [errors, setErrors] = useState([]);\n\n  const [titleError, setTitleError] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n\n  useEffect(() => {\n    if (existingTopic) {\n      setTitle(existingTopic.title);\n      setDescription(existingTopic.description);\n    }\n  }, [existingTopic]);\n\n  useEffect(() => {\n    if (title.length >= 10 && title.length <= 250) {\n      setTitleError(\"\");\n    } else if (title.length > 0) {\n      setTitleError(\"Title must be between 10 and 250 characters\");\n    }\n  }, [title]);\n\n  useEffect(() => {\n    if (description.length >= 50 && description.length <= 500) {\n      setDescriptionError(\"\");\n    } else if (description.length > 0) {\n      setDescriptionError(\"Description must be between 50 and 500 characters\");\n    }\n  }, [description]);\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     let newErrors = [];\n\n  //     if (newErrors.length > 0) {\n  //         setErrors(newErrors);\n  //         return;\n  //     }\n\n  //     const topicData = { title, description };\n  //     onSubmit(topicData); // Call the passed onSubmit function\n  // };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let hasErrors = false;\n\n    // Title validation\n    if (title.length < 10 || title.length > 250) {\n      setTitleError(\"Title must be between 10 and 250 characters\");\n      hasErrors = true;\n    } else {\n      setTitleError(\"\");\n    }\n\n    // Description validation\n    if (description.length < 50 || description.length > 500) {\n      setDescriptionError(\"Description must be between 50 and 500 characters\");\n      hasErrors = true;\n    } else {\n      setDescriptionError(\"\");\n    }\n\n    if (\n      titleError ||\n      descriptionError ||\n      title.length === 0 ||\n      description.length === 0\n    ) {\n      // Handle the case when there are errors or fields are empty\n      return;\n    }\n\n    if (hasErrors) return;\n\n    const topicData = { title, description };\n    onSubmit(topicData);\n  };\nconst TopicForm = ({ handleSubmit, title, setTitle, description, setDescription, titleError, descriptionError, mode, onCancel }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"topic-form\">\n      <div className=\"form-group\">\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          className=\"form-control\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        {titleError && <p className=\"error\">{titleError}</p>}\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          className=\"form-control\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        {descriptionError && <p className=\"error\">{descriptionError}</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\" className=\"submit-button\">\n          {mode === \"edit\" ? \"Update Topic\" : \"Create Topic\"}\n        </button>\n        <button type=\"button\" onClick={onCancel} className=\"cancel-button\">\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n};\n\nexport default TopicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}